let SessionLoad = 1
let s:so_save = &g:so | let s:siso_save = &g:siso | setg so=0 siso=0 | setl so=-1 siso=-1
let v:this_session=expand("<sfile>:p")
silent only
silent tabonly
cd ~/projects/pd_externals/pd-nn-audio
if expand('%') == '' && !&modified && line('$') <= 1 && getline(1) == ''
  let s:wipebuf = bufnr('%')
endif
let s:shortmess_save = &shortmess
if &shortmess =~ 'A'
  set shortmess=aoOA
else
  set shortmess=aoO
endif
badd +118 src/lorenz~.c
badd +105 src/lorenzrk4~.c
badd +121 src/rossler~.c
badd +52 ~/obsidian/claude/understanding_the_lorenz_equations.md
badd +252 src/lorenzattractor~.c
badd +6 Makefile
badd +155 src/lorenzattr~.c
badd +178 ~/projects/pd_externals/pd-sandh/src/pulsenv~.c
badd +118 src/chua~.c
badd +261 ~/obsidian/claude/chua_circuit.md
argglobal
%argdel
edit src/lorenzattr~.c
let s:save_splitbelow = &splitbelow
let s:save_splitright = &splitright
set splitbelow splitright
wincmd _ | wincmd |
vsplit
wincmd _ | wincmd |
vsplit
2wincmd h
wincmd w
wincmd w
let &splitbelow = s:save_splitbelow
let &splitright = s:save_splitright
wincmd t
let s:save_winminheight = &winminheight
let s:save_winminwidth = &winminwidth
set winminheight=0
set winheight=1
set winminwidth=0
set winwidth=1
exe 'vert 1resize ' . ((&columns * 113 + 170) / 341)
exe 'vert 2resize ' . ((&columns * 113 + 170) / 341)
exe 'vert 3resize ' . ((&columns * 113 + 170) / 341)
argglobal
balt src/rossler~.c
setlocal foldmethod=manual
setlocal foldexpr=0
setlocal foldmarker={{{,}}}
setlocal foldignore=#
setlocal foldlevel=0
setlocal foldminlines=1
setlocal foldnestmax=20
setlocal foldenable
silent! normal! zE
let &fdl = &fdl
let s:l = 81 - ((14 * winheight(0) + 29) / 58)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 81
normal! 0
wincmd w
argglobal
if bufexists(fnamemodify("src/chua~.c", ":p")) | buffer src/chua~.c | else | edit src/chua~.c | endif
if &buftype ==# 'terminal'
  silent file src/chua~.c
endif
balt Makefile
setlocal foldmethod=manual
setlocal foldexpr=0
setlocal foldmarker={{{,}}}
setlocal foldignore=#
setlocal foldlevel=0
setlocal foldminlines=1
setlocal foldnestmax=20
setlocal foldenable
silent! normal! zE
let &fdl = &fdl
let s:l = 63 - ((26 * winheight(0) + 29) / 58)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 63
normal! 028|
wincmd w
argglobal
if bufexists(fnamemodify("~/obsidian/claude/chua_circuit.md", ":p")) | buffer ~/obsidian/claude/chua_circuit.md | else | edit ~/obsidian/claude/chua_circuit.md | endif
if &buftype ==# 'terminal'
  silent file ~/obsidian/claude/chua_circuit.md
endif
balt ~/obsidian/claude/understanding_the_lorenz_equations.md
setlocal foldmethod=manual
setlocal foldexpr=0
setlocal foldmarker={{{,}}}
setlocal foldignore=#
setlocal foldlevel=0
setlocal foldminlines=1
setlocal foldnestmax=20
setlocal foldenable
silent! normal! zE
let &fdl = &fdl
let s:l = 119 - ((44 * winheight(0) + 29) / 58)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 119
normal! 03|
wincmd w
2wincmd w
exe 'vert 1resize ' . ((&columns * 113 + 170) / 341)
exe 'vert 2resize ' . ((&columns * 113 + 170) / 341)
exe 'vert 3resize ' . ((&columns * 113 + 170) / 341)
tabnext 1
if exists('s:wipebuf') && len(win_findbuf(s:wipebuf)) == 0 && getbufvar(s:wipebuf, '&buftype') isnot# 'terminal'
  silent exe 'bwipe ' . s:wipebuf
endif
unlet! s:wipebuf
set winheight=1 winwidth=20
let &shortmess = s:shortmess_save
let &winminheight = s:save_winminheight
let &winminwidth = s:save_winminwidth
let s:sx = expand("<sfile>:p:r")."x.vim"
if filereadable(s:sx)
  exe "source " . fnameescape(s:sx)
endif
let &g:so = s:so_save | let &g:siso = s:siso_save
set hlsearch
nohlsearch
doautoall SessionLoadPost
unlet SessionLoad
" vim: set ft=vim :
